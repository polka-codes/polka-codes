// generated by polka.codes

import { executeCommand, handOver, listFiles, readFile, replaceInFile, searchFiles, writeToFile } from '@polka-codes/core'
import { agentWorkflow, type WorkflowFn } from '@polka-codes/workflow'
import type { CliToolRegistry } from '../workflow-tools'

export type TaskWorkflowInput = {
  task: string
  agent: string
}

const SYSTEM_PROMPT = `You are a generic AI assistant.
You are able to perform simple tasks including making simple changes, reading code, and answering user questions.
Use the available tools to perform the task.`

export const taskWorkflow: WorkflowFn<TaskWorkflowInput, { success: boolean }, CliToolRegistry> = async (input, context) => {
  const { logger, step } = context
  const { task } = input

  logger.info(`
ðŸ¤– Running generic agent...
`)

  await step('agent', async () => {
    await agentWorkflow(
      {
        systemPrompt: SYSTEM_PROMPT,
        userMessage: [{ role: 'user', content: task }],
        tools: [readFile, writeToFile, replaceInFile, searchFiles, listFiles, executeCommand, handOver],
      },
      context,
    )
  })

  logger.info(`
âœ… Agent finished!
`)

  return { success: true }
}
