// generated by polka.codes

import type { AgentNameType } from '@polka-codes/core'
import type { Workflow } from '@polka-codes/workflow'
import type { CliToolRegistry } from '../workflow-tools'

export type TaskWorkflowInput = {
  task: string
  agent: string
}

export const taskWorkflow: Workflow<TaskWorkflowInput, { success: boolean }, CliToolRegistry> = {
  name: 'Agent Task',
  description: 'Run a specific agent with a given task.',
  async *fn(input, { tools, logger }) {
    const { task, agent } = input

    logger.info(`\nðŸ¤– Invoking agent: ${agent}...\n`)

    const messages = [{ type: 'user' as const, content: task }]

    yield* tools.invokeAgent({
      agent: agent as AgentNameType,
      messages,
      defaultContext: true,
    })

    logger.info('\nâœ… Agent finished!\n')

    return { success: true }
  },
}
