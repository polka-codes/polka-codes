// generated by polka.codes

import {
  agentWorkflow,
  executeCommand,
  fetchUrl,
  listFiles,
  readBinaryFile,
  readFile,
  removeFile,
  renameFile,
  replaceInFile,
  searchFiles,
  type WorkflowFn,
  writeToFile,
} from '@polka-codes/core'
import type { CliToolRegistry } from '../workflow-tools'
import { getDefaultContext } from './workflow.utils'

export type TaskWorkflowInput = {
  task: string
}

const SYSTEM_PROMPT = `You are a generic AI assistant.
You are able to perform simple tasks including making simple changes, reading code, and answering user questions.
Use the available tools to perform the task.`

export const taskWorkflow: WorkflowFn<TaskWorkflowInput, { success: boolean }, CliToolRegistry> = async (input, context) => {
  const { logger, step } = context
  const { task } = input

  logger.info(`
Running generic agent...
`)

  await step('agent', async () => {
    const defaultContext = await getDefaultContext()
    const userMessage = `${task}\n\n${defaultContext}`
    await agentWorkflow(
      {
        systemPrompt: SYSTEM_PROMPT,
        userMessage: [{ role: 'user', content: userMessage }],
        tools: [
          readFile,
          writeToFile,
          replaceInFile,
          searchFiles,
          listFiles,
          executeCommand,
          fetchUrl,
          readBinaryFile,
          removeFile,
          renameFile,
        ],
      },
      context,
    )
  })

  logger.info(`
Agent finished!
`)

  return { success: true }
}
