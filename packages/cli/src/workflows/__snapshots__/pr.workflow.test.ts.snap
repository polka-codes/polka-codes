// Bun Snapshot v1, https://bun.sh/docs/test/snapshots

exports[`should create PR with user context 1`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "--version",
      ],
      "command": "gh",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should create PR with user context 2`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "rev-parse",
        "--abbrev-ref",
        "HEAD",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should create PR with user context 3`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "show-ref",
        "--verify",
        "--quiet",
        "refs/heads/master",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should create PR with user context 4`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "show-ref",
        "--verify",
        "--quiet",
        "refs/heads/main",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should create PR with user context 5`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "--no-pager",
        "log",
        "--oneline",
        "--no-color",
        "--no-merges",
        "--no-decorate",
        "main..HEAD",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should create PR with user context 6`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "--no-pager",
        "diff",
        "main..HEAD",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should create PR with user context 7`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "kind": "StartTask",
      "systemPrompt": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
    },
    "tool": "taskEvent",
    "type": "tool",
  },
}
`;

exports[`should create PR with user context 8`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "kind": "StartRequest",
      "userMessage": [
        {
          "content": 
"<branch_name>feature/add-auth</branch_name>
<commit_messages>abc1234 feat: add authentication module
def5678 fix: resolve login bug
</commit_messages>
<diff>--- a/src/auth.ts
+++ b/src/auth.ts
@@ -1,3 +1,5 @@
+export function authenticate() {
+  return true;
+}
 export function login() {}
</diff>
<user_context>Implementing new authentication feature</user_context>"
,
          "role": "user",
        },
      ],
    },
    "tool": "taskEvent",
    "type": "tool",
  },
}
`;

exports[`should create PR with user context 9`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "messages": [
        {
          "content": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
          "role": "system",
        },
        {
          "content": 
"<branch_name>feature/add-auth</branch_name>
<commit_messages>abc1234 feat: add authentication module
def5678 fix: resolve login bug
</commit_messages>
<diff>--- a/src/auth.ts
+++ b/src/auth.ts
@@ -1,3 +1,5 @@
+export function authenticate() {
+  return true;
+}
 export function login() {}
</diff>
<user_context>Implementing new authentication feature</user_context>"
,
          "role": "user",
        },
      ],
      "tools": {},
    },
    "tool": "generateText",
    "type": "tool",
  },
}
`;

exports[`should create PR without context 1`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "--version",
      ],
      "command": "gh",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should create PR without context 2`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "rev-parse",
        "--abbrev-ref",
        "HEAD",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should create PR without context 3`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "show-ref",
        "--verify",
        "--quiet",
        "refs/heads/master",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should create PR without context 4`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "show-ref",
        "--verify",
        "--quiet",
        "refs/heads/main",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should create PR without context 5`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "--no-pager",
        "log",
        "--oneline",
        "--no-color",
        "--no-merges",
        "--no-decorate",
        "main..HEAD",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should create PR without context 6`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "--no-pager",
        "diff",
        "main..HEAD",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should create PR without context 7`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "kind": "StartTask",
      "systemPrompt": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
    },
    "tool": "taskEvent",
    "type": "tool",
  },
}
`;

exports[`should create PR without context 8`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "kind": "StartRequest",
      "userMessage": [
        {
          "content": 
"<branch_name>feature/new-feature</branch_name>
<commit_messages>xyz9876 chore: update dependencies
</commit_messages>
<diff>--- a/package.json
+++ b/package.json
@@ -10,7 +10,7 @@
-    "lodash": "^4.17.20"
+    "lodash": "^4.17.21"
</diff>"
,
          "role": "user",
        },
      ],
    },
    "tool": "taskEvent",
    "type": "tool",
  },
}
`;

exports[`should create PR without context 9`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "messages": [
        {
          "content": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
          "role": "system",
        },
        {
          "content": 
"<branch_name>feature/new-feature</branch_name>
<commit_messages>xyz9876 chore: update dependencies
</commit_messages>
<diff>--- a/package.json
+++ b/package.json
@@ -10,7 +10,7 @@
-    "lodash": "^4.17.20"
+    "lodash": "^4.17.21"
</diff>"
,
          "role": "user",
        },
      ],
      "tools": {},
    },
    "tool": "generateText",
    "type": "tool",
  },
}
`;

exports[`should fail when GitHub CLI is not installed 1`] = `
{
  "error": "GitHub CLI (gh) is not installed. Please install it from https://cli.github.com/",
  "status": "failed",
}
`;

exports[`should fail when unable to determine default branch 1`] = `
{
  "error": "Could not determine default branch name.",
  "status": "failed",
}
`;

exports[`should handle branch with special characters 1`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "show-ref",
        "--verify",
        "--quiet",
        "refs/heads/master",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should handle branch with special characters 2`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "kind": "StartTask",
      "systemPrompt": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
    },
    "tool": "taskEvent",
    "type": "tool",
  },
}
`;

exports[`should handle branch with special characters 3`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "messages": [
        {
          "content": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
          "role": "system",
        },
        {
          "content": 
"<branch_name>feature/fix-bug-#123</branch_name>
<commit_messages>aaa1111 fix: resolve issue #123
</commit_messages>
<diff>--- a/src/bugfix.ts
+++ b/src/bugfix.ts
@@ -5,7 +5,7 @@
-  return false;
+  return true;
</diff>"
,
          "role": "user",
        },
      ],
      "tools": {},
    },
    "tool": "generateText",
    "type": "tool",
  },
}
`;

exports[`should handle no commits between branches 1`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "--no-pager",
        "diff",
        "master..HEAD",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should handle no commits between branches 2`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "kind": "StartTask",
      "systemPrompt": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
    },
    "tool": "taskEvent",
    "type": "tool",
  },
}
`;

exports[`should handle no commits between branches 3`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "messages": [
        {
          "content": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
          "role": "system",
        },
        {
          "content": 
"<branch_name>feature/empty-branch</branch_name>
<commit_messages></commit_messages>
<diff>--- a/README.md
+++ b/README.md
@@ -1 +1,2 @@
 # Project
+Updated readme
</diff>"
,
          "role": "user",
        },
      ],
      "tools": {},
    },
    "tool": "generateText",
    "type": "tool",
  },
}
`;

exports[`should handle empty diff 1`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "kind": "StartTask",
      "systemPrompt": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
    },
    "tool": "taskEvent",
    "type": "tool",
  },
}
`;

exports[`should handle empty diff 2`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "messages": [
        {
          "content": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
          "role": "system",
        },
        {
          "content": 
"<branch_name>feature/empty-diff</branch_name>
<commit_messages>bbb2222 chore: trigger CI
</commit_messages>
<diff></diff>"
,
          "role": "user",
        },
      ],
      "tools": {},
    },
    "tool": "generateText",
    "type": "tool",
  },
}
`;

exports[`should handle multiple commits with various messages 1`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "--no-pager",
        "diff",
        "main..HEAD",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should handle multiple commits with various messages 2`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "kind": "StartTask",
      "systemPrompt": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
    },
    "tool": "taskEvent",
    "type": "tool",
  },
}
`;

exports[`should handle multiple commits with various messages 3`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "messages": [
        {
          "content": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
          "role": "system",
        },
        {
          "content": 
"<branch_name>feature/multi-commit</branch_name>
<commit_messages>abc1234 feat: add user profile page
def5678 fix: resolve navigation issue
ghi9012 test: add unit tests
jkl3456 docs: update API documentation
mno7890 refactor: clean up code
</commit_messages>
<diff>--- a/src/profile.ts
+++ b/src/profile.ts
@@ -0,0 +1,10 @@
+export function getUserProfile() {
+  return { name: 'User' };
+}
--- a/src/nav.ts
+++ b/src/nav.ts
@@ -5,7 +5,7 @@
-  router.push('/wrong');
+  router.push('/correct');
--- a/docs/API.md
+++ b/docs/API.md
@@ -1 +1,5 @@
 # API
+
+## Endpoints
+- GET /profile
</diff>"
,
          "role": "user",
        },
      ],
      "tools": {},
    },
    "tool": "generateText",
    "type": "tool",
  },
}
`;

exports[`should use develop as default branch 1`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "--no-pager",
        "log",
        "--oneline",
        "--no-color",
        "--no-merges",
        "--no-decorate",
        "develop..HEAD",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should use develop as default branch 2`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "messages": [
        {
          "content": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
          "role": "system",
        },
        {
          "content": 
"<branch_name>feature/new-feature</branch_name>
<commit_messages>ccc3333 feat: implement feature
</commit_messages>
<diff>--- a/src/feature.ts
+++ b/src/feature.ts
@@ -1 +1,3 @@
+export function feature() {}
</diff>"
,
          "role": "user",
        },
      ],
      "tools": {},
    },
    "tool": "generateText",
    "type": "tool",
  },
}
`;

exports[`should use gh repo view to determine default branch 1`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "--no-pager",
        "log",
        "--oneline",
        "--no-color",
        "--no-merges",
        "--no-decorate",
        "trunk..HEAD",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should use gh repo view to determine default branch 2`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "messages": [
        {
          "content": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
          "role": "system",
        },
        {
          "content": 
"<branch_name>feature/custom-branch</branch_name>
<commit_messages>ddd4444 refactor: code cleanup
</commit_messages>
<diff>--- a/src/cleanup.ts
+++ b/src/cleanup.ts
@@ -1,5 +1,3 @@
-// old code
-// more old code
 // clean code
</diff>"
,
          "role": "user",
        },
      ],
      "tools": {},
    },
    "tool": "generateText",
    "type": "tool",
  },
}
`;

exports[`should use git remote show origin to determine default branch 1`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "args": [
        "--no-pager",
        "log",
        "--oneline",
        "--no-color",
        "--no-merges",
        "--no-decorate",
        "production..HEAD",
      ],
      "command": "git",
    },
    "tool": "executeCommand",
    "type": "tool",
  },
}
`;

exports[`should use git remote show origin to determine default branch 2`] = `
{
  "next": [Function: AsyncFunction],
  "status": "pending",
  "throw": [Function: AsyncFunction],
  "tool": {
    "input": {
      "messages": [
        {
          "content": 
"
You are an expert at creating pull requests.
Based on the provided branch name, commit messages, and diff, generate a title and description for the pull request.

Respond with a JSON object containing the title and description.
Example format:
\`\`\`json
{
  "title": "feat: add new feature",
  "description": "This pull request adds a new feature that does...\\n\\n### Changes\\n- ..."
}
\`\`\`
"
,
          "role": "system",
        },
        {
          "content": 
"<branch_name>feature/test-branch</branch_name>
<commit_messages>eee5555 build: update config
</commit_messages>
<diff>--- a/config.yml
+++ b/config.yml
@@ -1 +1,2 @@
 version: 1.0
+env: production
</diff>"
,
          "role": "user",
        },
      ],
      "tools": {},
    },
    "tool": "generateText",
    "type": "tool",
  },
}
`;
