// generated by polka.codes
import { input } from '@inquirer/prompts'
import { Command } from 'commander'
import { runWorkflow } from '../runWorkflow'
import { type CodeWorkflowInput, codeWorkflow } from '../workflows/code.workflow'

export const codeCommand = new Command('code')
  .description('Plan and implement a feature or task using architect and coder agents.')
  .argument('[task]', 'The task to plan and implement.')
  .option('-c, --check <command>', 'The command to run for checking/testing after implementation.')
  .action(async (task: string | undefined, options: { check?: string }, command: Command) => {
    let taskInput = task

    if (!taskInput) {
      try {
        taskInput = await input({ message: 'What feature or task do you want to implement?' })
      } catch (error) {
        if (error instanceof Error && error.name === 'ExitPromptError') {
          return
        }
        throw error
      }
    }

    const workflowInput: CodeWorkflowInput = {
      task: taskInput,
      checkCommand: options.check,
    }

    await runWorkflow('code', codeWorkflow, command, workflowInput)
  })
