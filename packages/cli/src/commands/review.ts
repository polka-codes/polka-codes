// generated by polka.codes

import type { StepRunResult } from '@polka-codes/core'
import { Command } from 'commander'
import { runWorkflowCommand } from '../runWorkflow'
import { type HandleResultOutput, reviewWorkflow } from '../workflows'
import { runTask } from './task'

export const reviewCommand = new Command('review')
  .description('Review a GitHub pull request or local changes')
  .option('--pr <pr>', 'The pull request number or URL to review')
  .option('--json', 'Output the review in JSON format', false)
  .action(async (options: { pr?: string; json: boolean }, command: Command) => {
    const { json, pr } = options
    const input = { json, ...(pr && { pr }) }

    const handleSuccess = async (result: StepRunResult<HandleResultOutput>, command?: Command) => {
      if (result.type === 'success' && result.output.shouldRunTask) {
        if (!command) {
          throw new Error('Command object not available in handleSuccess')
        }
        const taskInstruction = `please address the review result:\n\n${result.output.formattedReview}`
        await runTask(taskInstruction, {}, command)
      }
    }

    await runWorkflowCommand('review', reviewWorkflow, command, input, handleSuccess, { json })
  })
