// generated by polka.codes
import { input } from '@inquirer/prompts'
import type { Command } from 'commander'
import { runWorkflow } from '../runWorkflow'
import { metaWorkflow } from '../workflows/meta.workflow'

export async function runMeta(task: string | undefined, command: Command) {
  let taskInput = task

  if (!taskInput) {
    try {
      taskInput = await input({
        message: 'What feature or task do you want to implement?',
      })
    } catch (error) {
      if (error instanceof Error && error.name === 'ExitPromptError') {
        return
      }
      throw error
    }
  }

  if (!taskInput) {
    // This should not happen based on the logic above, but as a safeguard:
    console.error('No task provided. Aborting.')
    return
  }

  await runWorkflow('meta', metaWorkflow, command, {
    task: taskInput,
  })
}
