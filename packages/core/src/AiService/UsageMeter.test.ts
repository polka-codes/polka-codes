/**
 * Tests for UsageMeter class
 * Generated by polka.codes
 */

import { describe, expect, test } from 'bun:test'
import { UsageMeter } from './UsageMeter'

describe('UsageMeter', () => {
  test('should initialize with zero values', () => {
    const meter = new UsageMeter()
    expect(meter.usage).toMatchSnapshot()
  })

  test('should correctly add usage metrics', () => {
    const meter = new UsageMeter()

    meter.addUsage({
      inputTokens: 100,
      outputTokens: 50,
      cacheWriteTokens: 25,
      cacheReadTokens: 10,
      totalCost: 0.002,
    })

    expect(meter.usage).toMatchSnapshot()
  })

  test('should handle partial usage updates', () => {
    const meter = new UsageMeter()

    meter.addUsage({ inputTokens: 100 })
    meter.addUsage({ outputTokens: 50 })
    meter.addUsage({ totalCost: 0.001 })

    expect(meter.usage).toMatchSnapshot()
  })

  test('should handle multiple consecutive updates', () => {
    const meter = new UsageMeter()

    meter.addUsage({ inputTokens: 50, outputTokens: 25 })
    meter.addUsage({ inputTokens: 30, cacheReadTokens: 10 })
    meter.addUsage({ outputTokens: 15, totalCost: 0.001 })

    expect(meter.usage).toMatchSnapshot()
  })
})
