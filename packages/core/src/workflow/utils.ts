// generated by polka.codes
import { template } from 'lodash'
import type { Json, TemplatedString } from './types'

export const resolveTemplatedString = <T extends { [k: string]: Json }>(templatedString: string | TemplatedString<T>, input: T): string => {
  if (typeof templatedString === 'string') {
    return templatedString
  }
  if (templatedString.type === 'function') {
    return templatedString.fn(input)
  }
  return template(templatedString.template)(input)
}
