// generated by polka.codes
import { describe, expect, test } from 'bun:test'
import { resolveTemplatedString } from './utils'

describe('resolveTemplatedString', () => {
  test('should return the same string if it is a string literal', () => {
    const result = resolveTemplatedString('hello world', {})
    expect(result).toBe('hello world')
  })

  test('should resolve a templated string', () => {
    const result = resolveTemplatedString(
      {
        type: 'template',
        template: 'hello <%= name %>',
      },
      { name: 'world' },
    )
    expect(result).toBe('hello world')
  })

  test('should resolve a templated string with a function', () => {
    const result = resolveTemplatedString(
      {
        type: 'function',
        fn: (input: Record<string, any>) => `hello ${input.name.toUpperCase()}`,
      },
      { name: 'world' },
    )
    expect(result).toBe('hello WORLD')
  })
})
