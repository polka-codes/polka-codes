// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`Agent prompts toolUsePrompt should generate tool use documentation with tools 1`] = `
"
====

TOOL USE

You have access to a set of tools that are executed upon the user's approval. You can use up to 5 tool calls per message, and will receive the results of those tool uses in the user's response. You use tools step-by-step to accomplish a given task, with each tool use informed by the result of the previous tool use.

# Tool Use Formatting

Tool use is formatted using XML-style tags. The tool name is enclosed in opening and closing tags, and each parameter is similarly enclosed within its own set of tags. Here's the structure:

<tool_tool_name>
<tool_parameter_name1>value1</tool_parameter_name1>
<tool_parameter_name2>value2</tool_parameter_name2>
...
</tool_tool_name>

**It is crucial that all tags are correctly nested and closed.**

## Array Parameters

To create an array of values for a parameter, repeat the parameter tag multiple times:

<tool_process_file>
<tool_parameter_path>test.ts</tool_parameter_path>
<tool_parameter_path>main.ts</tool_parameter_path>
</tool_process_file>

## Nested Object Parameters

To create nested objects, nest parameter tags within other parameter tags:

<tool_example_tool>
<tool_parameter_key>
<tool_parameter_key2>value</tool_parameter_key2>
<tool_parameter_key3>value2</tool_parameter_key3>
</tool_parameter_key>
</tool_example_tool>

You can also combine array parameters with nested objects:

<tool_example_tool>
<tool_parameter_key>
<tool_parameter_key2>value</tool_parameter_key2>
<tool_parameter_key3>value2</tool_parameter_key3>
</tool_parameter_key>
<tool_parameter_key>
<tool_parameter_key2>value3</tool_parameter_key2>
<tool_parameter_key3>value4</tool_parameter_key3>
<tool_parameter_key3>value5</tool_parameter_key3>
</tool_parameter_key>
</tool_example_tool>

Always adhere to this format, ensuring every opening tag has a matching closing tag, to ensure proper parsing and execution.

NEVER surround tool use with triple backticks (\`\`\`).

# Tools

## tool_test_tool

Description: A test tool

Parameters:
- tool_parameter_param1: (required) First parameter
- tool_parameter_param2: (optional) Second parameter

Usage:
<tool_test_tool>
<tool_parameter_param1>value1</tool_parameter_param1>
<tool_parameter_param2>value2</tool_parameter_param2>
</tool_test_tool>

# Tool Use Examples

## Example: Example usage

<tool_test_tool>
<tool_parameter_param1>test1</tool_parameter_param1>
<tool_parameter_param2>test2</tool_parameter_param2>
</tool_test_tool>

# Tool Use Guidelines

1. **Wait for Feedback**
  - After using a tool, wait for the user's response indicating success/failure or any output logs. Do not assume the result of a tool without explicit confirmation.
2. **Error Handling**
  - If a tool fails or produces an unexpected result, analyze the error, decide on an alternative approach or tool, and proceed carefully.
3. **Avoid Repetition**
  - Do not quote or repeat previous commands or prompts verbatim. Move the conversation forward by focusing on the latest required action.
4. **Tool Call Limit**
  - It is **STRIGHTLY FORBIDDEN** to make more than 5 tool calls in a single message."
`;

exports[`Agent prompts agentsPrompt should generate agents documentation 1`] = `
"
====

AVAILABLE AGENTS

The following agents are available for task handover/delegate:

- **TestAgent**
  - Responsibilities:
    - Test responsibility 1
    - Test responsibility 2

- **AnotherAgent**
  - Responsibilities:
    - Another responsibility

- **Current Agent Role**
  You are currently acting as **CurrentAgent**. If you identify the task is beyond your current scope, use the handover or delegate tool to transition to the other agent. Include sufficient context so the new agent can seamlessly continue the work.
"
`;

exports[`Agent prompts agentsPrompt should include current agent name 1`] = `
"
====

AVAILABLE AGENTS

The following agents are available for task handover/delegate:

- **TestAgent**
  - Responsibilities:
    - Test responsibility

- **Current Agent Role**
  You are currently acting as **CurrentAgent**. If you identify the task is beyond your current scope, use the handover or delegate tool to transition to the other agent. Include sufficient context so the new agent can seamlessly continue the work.
"
`;

exports[`Agent prompts responsePrompts errorInvokeTool should format error message 1`] = `"An error occurred while invoking the tool "test_tool": Test error"`;

exports[`Agent prompts responsePrompts requireUseTool should return error message 1`] = `
"Error: No tool use detected. You MUST use a tool before proceeding.
e.g. <tool_tool_name>tool_name</tool_tool_name>

Ensure the opening and closing tags are correctly nested and closed, and that you are using the correct tool name.
Avoid unnecessary text or symbols before or after the tool use.
Avoid unnecessary escape characters or special characters.
"
`;

exports[`Agent prompts responsePrompts toolResults should format tool results 1`] = `
[
  {
    "text": "<tool_response name=test_tool>Test result</tool_response>",
    "type": "text",
  },
]
`;
