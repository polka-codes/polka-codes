description: Agent implementations for different roles
files:
  AgentBase.ts:
    description: Base class for all agents
  AnalyzerAgent/index.ts:
    description: Code analysis agent implementation
  ArchitectAgent/index.ts:
    description: System design agent implementation
  CodeFixerAgent/index.ts:
    description: Code fixing agent implementation
  CoderAgent/index.ts:
    description: Coding agent implementation
  MultiAgent.ts:
    description: Multi-agent coordination
  parseAssistantMessage.ts:
    description: Parses assistant messages to extract tool usage and parameters,
      with improved support for array parameters with nested objects
    api:
      interfaces:
        "1":
          name: TextContent
          properties:
            "1":
              name: type
              type: "'text'"
            "2":
              name: content
              type: string
          description: Represents plain text content in an assistant message
        "2":
          name: ToolUse
          properties:
            "1":
              name: type
              type: "'tool_use'"
            "2":
              name: name
              type: string
            "3":
              name: params
              type: Record<string, any>
          description: Represents a tool use in an assistant message
        "3":
          name: AssistantMessageContent
          description: Union type of TextContent and ToolUse
      functions:
        "1":
          name: parseAssistantMessage
          description: Parses an assistant's message into text content and tool use
            content, with improved support for array parameters with nested
            objects
          params:
            "1":
              name: assistantMessage
              type: string
              description: The message to parse
            "2":
              name: tools
              type: ToolInfo[]
              description: Available tools
            "3":
              name: toolNamePrefix
              type: string
              description: Prefix for tool names in XML tags
          returns: AssistantMessageContent[]
  policies/KnowledgeManagement.ts:
    description: Knowledge management policy
  prompts.ts:
    description: Provides functions to generate prompts for AI agents
    api:
      functions:
        "1":
          name: toolUsePrompt
          description: Generates a prompt that explains how to use tools with XML-style
            tags, including support for array parameters and nested objects
          params:
            "1":
              name: tools
              type: ToolInfo[]
            "2":
              name: toolNamePrefix
              type: string
          returns: string
        "2":
          name: agentsPrompt
          description: Generates a prompt that explains available agents and their
            responsibilities
          params:
            "1":
              name: agents
              type: Readonly<AgentInfo[]>
            "2":
              name: name
              type: string
          returns: string
        "3":
          name: capabilities
          description: Generates a prompt that explains the capabilities of the AI
          params:
            "1":
              name: toolNamePrefix
              type: string
          returns: string
        "4":
          name: systemInformation
          description: Generates a prompt that provides system information
          params:
            "1":
              name: info
              type: "{ os: string }"
          returns: string
        "5":
          name: customInstructions
          description: Generates a prompt that provides custom instructions
          params:
            "1":
              name: customInstructions
              type: string[]
          returns: string
        "6":
          name: customScripts
          description: Generates a prompt that provides custom scripts
          params:
            "1":
              name: commands
              type: "Record<string, string | { command: string; description: string }>"
          returns: string
rules:
  "1": Tool parameters can be arrays if allowMultiple is true
  "2": Tool parameters can have nested structure if children is defined
  "3": When parsing nested parameters, respect the children definition
  "4": When parsing array parameters, respect the allowMultiple flag
