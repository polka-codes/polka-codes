// generated by polka.codes
import { describe, expect, it } from 'bun:test'
import { parseJsonFromMarkdown } from './parseJsonFromMarkdown'

describe('parseJsonFromMarkdown', () => {
  it('should parse JSON from a markdown code block', () => {
    const markdown = 'Here is the JSON:\n\n```json\n{"key":"value"}\n```'
    const expected = { key: 'value' }
    expect(parseJsonFromMarkdown(markdown)).toEqual(expected)
  })

  it('should return the original string if no JSON is found', () => {
    const markdown = 'This is just a string.'
    expect(parseJsonFromMarkdown(markdown)).toBe(markdown)
  })

  it('should handle JSON without markdown fences', () => {
    const json = '{"key":"value"}'
    const expected = { key: 'value' }
    expect(parseJsonFromMarkdown(json)).toEqual(expected)
  })

  it('should throw an error for malformed JSON in a code block', () => {
    const markdown = '```json\n{"key":"value",,}\n```'
    expect(() => parseJsonFromMarkdown(markdown)).toThrow()
  })

  it('should parse JSON from a markdown code block without the json identifier', () => {
    const markdown = 'Here is the JSON:\n\n```\n{"key":"value"}\n```'
    const expected = { key: 'value' }
    expect(parseJsonFromMarkdown(markdown)).toEqual(expected)
  })

  it('should parse an escaped JSON string from a markdown code block', () => {
    const markdown = '```json\n"{\\"key\\":\\"value\\"}"\n```'
    const expected = { key: 'value' }
    expect(parseJsonFromMarkdown(markdown)).toEqual(expected)
  })

  it('should parse an escaped JSON string from a markdown code block without the json identifier', () => {
    const markdown = '```\n"{\\"key\\":\\"value\\"}"\n```'
    const expected = { key: 'value' }
    expect(parseJsonFromMarkdown(markdown)).toEqual(expected)
  })

  it('should parse a JSON array from a markdown code block', () => {
    const markdown = '```json\n[{"key":"value"}]\n```'
    const expected = [{ key: 'value' }]
    expect(parseJsonFromMarkdown(markdown)).toEqual(expected)
  })

  it('should parse a JSON array from a markdown code block without the json identifier', () => {
    const markdown = '```\n[{"key":"value"}]\n```'
    const expected = [{ key: 'value' }]
    expect(parseJsonFromMarkdown(markdown)).toEqual(expected)
  })
})
