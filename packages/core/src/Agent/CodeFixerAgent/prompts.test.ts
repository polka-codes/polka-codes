/**
 * @file Tests for CodeFixerAgent prompts
 * Generated by polka.codes
 */

import { describe, expect, test } from 'bun:test'
import { fullSystemPrompt } from './prompts'

describe('CodeFixerAgent prompts', () => {
  test('fullSystemPrompt should include all required sections', () => {
    const prompt = fullSystemPrompt({ os: 'test-os' }, [], 'tool_', [], {}, false)

    // Check for key sections
    expect(prompt).toContain('CODE FIXING STRATEGIES')
    expect(prompt).toContain('Type Errors')
    expect(prompt).toContain('Test Failures')
    expect(prompt).toContain('Code Quality Issues')

    // Check for retry guidelines
    expect(prompt).toContain('RETRY GUIDELINES')
    expect(prompt).toContain('Before Retrying')
    expect(prompt).toContain('When to Retry')
    expect(prompt).toContain('When to Stop')

    // Check for system info
    expect(prompt).toContain('SYSTEM INFORMATION')
    expect(prompt).toContain('test-os')
  })

  test('should include custom instructions when provided', () => {
    const customInstructions = ['Custom instruction 1', 'Custom instruction 2']
    const prompt = fullSystemPrompt({ os: 'test-os' }, [], 'tool_', customInstructions, {}, false)

    expect(prompt).toContain('Custom instruction 1')
    expect(prompt).toContain('Custom instruction 2')
  })

  test('should include custom scripts when provided', () => {
    const scripts = {
      test: 'bun test',
      check: { command: 'bun typecheck', description: 'Check types' },
    }
    const prompt = fullSystemPrompt({ os: 'test-os' }, [], 'tool_', [], scripts, false)

    expect(prompt).toContain('bun test')
    expect(prompt).toContain('bun typecheck')
    expect(prompt).toContain('Check types')
  })
})
