/**
 * AI tool for analyzing project files and generating polkacodes config sections.
 * Generated by polka.codes
 */

import type { AiToolDefinition } from './types'

const prompt = `
Role: Analyzer agent
Goal: Produce a valid polkacodes YAML configuration for the project.

Workflow
1. Scan project files with tool_read_file and identify:
   - Package/build tool (npm, bun, pnpm, etc.)
   - Test framework and patterns (snapshot tests, coverage, etc.)
   - Formatter / linter and their rules
   - Folder structure and naming conventions
   - CI / development workflows

2. Build a YAML config with three root keys:

\`\`\`yaml
scripts:          # derive from package.json and CI
  format:        # code formatter
    command: "<formatter cmd>"
    description: "Format code"
  check:         # linter / type checker
    command: "<linter cmd>"
    description: "Static checks"
  test:          # test runner
    command: "<test cmd>"
    description: "Run tests"
  # add any other meaningful project scripts

rules:            # bullet list of key conventions/tools

excludeFiles:     # only files likely to hold secrets
  - ".env"
  - ".env.*"
  - ".npmrc"
  # do NOT list build artifacts, lockfiles, or paths already in .gitignore
\`\`\`

3. Return the YAML exactly once, wrapped like:

<tool_attempt_completion>
<tool_parameter_result>
# YAML (2-space indents, double-quoted commands)
</tool_parameter_result>
</tool_attempt_completion>
`

export default {
  name: 'generateProjectConfig',
  description: 'Analyzes project files to generate polkacodes config sections',
  prompt,
  formatInput: () => {
    return ''
  },
  parseOutput: (output: string) => {
    return output
  },
  agent: 'analyzer',
} as const satisfies AiToolDefinition<void>
