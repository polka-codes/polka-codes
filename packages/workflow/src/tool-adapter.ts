// generated by polka.codes
import type { FullToolInfoV2, ToolResponse } from '@polka-codes/core'
import type { z } from 'zod'
import type { PlainJson, ToolRegistry, ToolSignature, ToolsExecutor } from './workflow'

export function createCoreToolsExecutor<T extends Record<string, FullToolInfoV2>, P, TR extends ToolRegistry>(
  coreTools: T,
  provider: P,
): ToolsExecutor<TR> {
  const executor: ToolsExecutor<any> = {}
  for (const toolName in coreTools) {
    const tool = coreTools[toolName]
    executor[toolName] = (input: any) => tool.handler(provider, input)
  }
  return executor
}

export type CoreToolsToWorkflowTools<
  T extends Record<string, { parameters: z.ZodType<any, any, any> }>,,
> = {
  [K in keyof T]: ToolSignature<z.input<T[K]['parameters']> & PlainJson, ToolResponse>
} & ToolRegistry
