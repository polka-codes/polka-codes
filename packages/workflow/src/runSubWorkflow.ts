// generated by polka.codes

import type { ToolCall, ToolRegistry, Workflow, WorkflowResult, WorkflowTools } from './workflow'
import { run } from './workflow'

/**
 * Helper function to run a sub-workflow within the current workflow context.
 */
export async function* runSubWorkflow<TInput, TOutput, TTools extends ToolRegistry>(
  tools: WorkflowTools<TTools>,
  workflow: Workflow<TInput, TOutput, TTools>,
  input: TInput,
): AsyncGenerator<ToolCall<TTools>, WorkflowResult<TInput, TOutput, TTools>, TTools[keyof TTools]['output']> {
  let state = await run(workflow, input)

  while (state.status === 'pending') {
    const toolName = state.tool.tool
    const toolInput = state.tool.input

    const toolFn = tools[toolName]
    const toolResult = yield* toolFn(toolInput)

    state = await state.next(toolResult)
  }

  return state
}
